---
import '../styles/api.css';
---

<body>
	<script is:inline>
		/**
		 * This script tweaks the OpenAPI spec before rendering the API reference:
		 * - limits recursive MatchingConditionsDict-* schemas to prevent crashes
		 * - hides selected fields from the docs (see hiddenFields)
		 *
		 * It fetches /api-schemas.json, applies the changes, then injects the
		 * result into the page for scalar-api-reference.js to consume. The original
		 * schemas on disk remain unchanged.
		 */
		(async () => {
			const apiSchemasUrl = '/api-schemas.json';
			try {
				const response = await fetch(apiSchemasUrl);
				let apiSchemas = await response.json();

				// Helper to deep-remove a specific key from any object/array
				const deepRemoveKey = (value, keyToRemove) => {
					if (Array.isArray(value)) {
						for (const item of value) deepRemoveKey(item, keyToRemove);
						return value;
					}
					if (value && typeof value === 'object') {
						if (Object.prototype.hasOwnProperty.call(value, keyToRemove)) {
							delete value[keyToRemove];
						}
						for (const k of Object.keys(value)) deepRemoveKey(value[k], keyToRemove);
					}
					return value;
				};

				// Fields to hide everywhere in the rendered documentation
				const hiddenFields = ['autosquash'];

				apiSchemas.components.schemas['MatchingConditionsDict-Input'] = JSON.parse(
					JSON.stringify(apiSchemas.components.schemas['MatchingConditionsDict-Input']).replaceAll(
						'#/components/schemas/MatchingConditionsDict-Input',
						'#/components/schemas/MatchingConditionsDict-Limited'
					)
				);
				apiSchemas.components.schemas['MatchingConditionsDict-Output'] = JSON.parse(
					JSON.stringify(apiSchemas.components.schemas['MatchingConditionsDict-Output']).replaceAll(
						'#/components/schemas/MatchingConditionsDict-Output',
						'#/components/schemas/MatchingConditionsDict-Limited'
					)
				);
				apiSchemas.components.schemas['MatchingConditionsDict-Limited'] = {
					properties: {
						and: {
							items: {
								type: 'string',
							},
							type: 'array',
							title: 'And',
						},
						or: {
							items: {
								type: 'string',
							},
							type: 'array',
							title: 'Or',
						},
						not: {
							items: {
								type: 'string',
							},
							type: 'array',
							title: 'Not',
						},
					},
					type: 'object',
					title: 'MatchingConditionsDict-Limited',
				};

				// Apply field hiding after other schema tweaks
				for (const field of hiddenFields) deepRemoveKey(apiSchemas, field);

				// Inject the modified JSON into the page for scalar-api-reference.js
				const modifiedDataScript = document.createElement('script');
				modifiedDataScript.id = 'api-reference';
				modifiedDataScript.textContent = JSON.stringify(apiSchemas);
				document.body.appendChild(modifiedDataScript);

				var script = document.createElement('script');
				script.src = '/scalar-api-reference.js';
				document.body.appendChild(script);
			} catch (error) {
				console.error('Error fetching or modifying API schemas:', error);
			}
		})();
	</script>
</body>
