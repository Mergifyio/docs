{"openapi": "3.0.2", "info": {"title": "Mergify API", "description": "Faster & safer code merge", "termsOfService": "https://mergify.com/tos", "contact": {"name": "Mergify", "url": "https://mergify.com", "email": "support@mergify.com"}, "version": "v1"}, "servers": [{"url": "https://api.mergify.com/v1", "description": "default"}], "paths": {"/application": {"get": {"tags": ["applications"], "summary": "Get current application", "description": "Get the current authenticated application", "operationId": "application_application_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationResponse"}, "example": {"id": 123456, "name": "an application name", "account_scope": {"id": 123456, "login": "Mergifyio"}}}}}, "403": {"description": "Forbidden"}, "404": {"description": "Not found"}}, "security": [{"ApplicationAuth": []}]}}, "/repos/{owner}/{repository}/queues/configuration": {"get": {"tags": ["queues"], "summary": "Get merge queues configuration", "description": "Get the list of all merge queues configuration sorted by processing order", "operationId": "repository_queues_configuration_repos__owner___repository__queues_configuration_get", "parameters": [{"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueuesConfig"}}}}, "403": {"description": "Forbidden"}, "422": {"description": "The configuration file is invalid."}}, "security": [{"ApplicationAuth": []}]}}, "/repos/{owner}/{repository}/queue/{queue_name}/freeze": {"get": {"tags": ["queues"], "summary": "Get queue freeze data", "description": "Checks if the queue is frozen and get the queue freeze data", "operationId": "get_queue_freeze_repos__owner___repository__queue__queue_name__freeze_get", "parameters": [{"description": "The name of the queue", "required": true, "schema": {"title": "Queue Name", "type": "string", "description": "The name of the queue"}, "name": "queue_name", "in": "path"}, {"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueueFreezeResponse"}}}}, "403": {"description": "Forbidden"}, "404": {"description": "The queue does not exist or is not currently frozen"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ApplicationAuth": []}]}, "put": {"tags": ["queues"], "summary": "Freezes merge queue", "description": "Freezes the merge of the requested queue and the queues following it", "operationId": "create_queue_freeze_repos__owner___repository__queue__queue_name__freeze_put", "parameters": [{"description": "The name of the queue", "required": true, "schema": {"title": "Queue Name", "type": "string", "description": "The name of the queue"}, "name": "queue_name", "in": "path"}, {"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueueFreezePayload"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueueFreezeResponse"}}}}, "403": {"description": "Forbidden"}, "404": {"description": "The queue does not exist"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ApplicationAuth": []}]}, "delete": {"tags": ["queues"], "summary": "Unfreeze merge queue", "description": "Unfreeze the specified merge queue", "operationId": "delete_queue_freeze_repos__owner___repository__queue__queue_name__freeze_delete", "parameters": [{"description": "The name of the queue", "required": true, "schema": {"title": "Queue Name", "type": "string", "description": "The name of the queue"}, "name": "queue_name", "in": "path"}, {"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}], "responses": {"204": {"description": "Successful Response"}, "403": {"description": "Forbidden"}, "404": {"description": "The queue does not exist or is not currently frozen"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ApplicationAuth": []}]}}, "/repos/{owner}/{repository}/queues/freezes": {"get": {"tags": ["queues"], "summary": "Get the list of frozen queues", "description": "Get the list of frozen queues inside the requested repository", "operationId": "get_list_queue_freeze_repos__owner___repository__queues_freezes_get", "parameters": [{"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueueFreezeResponse"}}}}, "403": {"description": "Forbidden"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ApplicationAuth": []}]}}, "/repos/{owner}/{repository}/queues": {"get": {"tags": ["queues"], "summary": "Get merge queues", "description": "Get the list of pull requests queued in a merge queue of a repository", "operationId": "repository_queues_repos__owner___repository__queues_get", "parameters": [{"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Queues"}, "example": {"queues": [{"branch": {"name": "main"}, "pull_requests": [{"number": 5678, "position": 1, "priority": 100, "effective_priority": 100, "partition_name": "__default__", "queue_rule": {"name": "default", "config": {"priority": 100, "batch_size": 1, "batch_max_wait_time": 0, "speculative_checks": 2, "allow_inplace_checks": true, "allow_queue_branch_edit": false, "disallow_checks_interruption_from_queues": [], "checks_timeout": 60, "draft_bot_account": "", "queue_branch_prefix": "mergify/merge-queue/", "queue_branch_merge_method": "fast-forward", "batch_max_failure_resolution_attempts": 10, "commit_message_template": "", "merge_bot_account": "", "merge_method": "merge", "update_bot_account": "", "update_method": "rebase", "autosquash": true}}, "speculative_check_pull_request": {"in_place": true, "number": 5678, "started_at": "2021-10-14T14:19:12+00:00", "ended_at": "2021-10-14T15:00:42+00:00", "checks": [], "evaluated_conditions": "", "state": "success"}, "mergeability_check": {"check_type": "in_place", "pull_request_number": 5678, "started_at": "2021-10-14T14:19:12+00:00", "ended_at": "2021-10-14T15:00:42+00:00", "state": "success"}, "queued_at": "2021-10-14T14:19:12+00:00", "estimated_time_of_merge": "2021-10-14T15:19:12+00:00"}, {"number": 4242, "position": 1, "priority": 100, "effective_priority": 100, "partition_name": "__default__", "queue_rule": {"name": "default", "config": {"priority": 100, "batch_size": 1, "batch_max_wait_time": 0, "speculative_checks": 2, "allow_inplace_checks": true, "allow_queue_branch_edit": false, "disallow_checks_interruption_from_queues": [], "checks_timeout": 60, "draft_bot_account": "", "queue_branch_prefix": "mergify/merge-queue/", "queue_branch_merge_method": "fast-forward", "batch_max_failure_resolution_attempts": 10, "commit_message_template": "", "merge_bot_account": "", "merge_method": "merge", "update_bot_account": "", "update_method": "rebase", "autosquash": false}}, "speculative_check_pull_request": {"in_place": false, "number": 7899, "started_at": "2021-10-14T14:19:12+00:00", "ended_at": "2021-10-14T15:00:42+00:00", "checks": [], "evaluated_conditions": "", "state": "success"}, "mergeability_check": {"check_type": "draft_pr", "pull_request_number": 7899, "started_at": "2021-10-14T14:19:12+00:00", "ended_at": "2021-10-14T15:00:42+00:00", "state": "success"}, "queued_at": "2021-10-14T14:19:12+00:00", "estimated_time_of_merge": "2021-10-14T15:19:12+00:00"}]}]}}}}, "403": {"description": "Forbidden"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ApplicationAuth": []}]}}, "/badges/{owner}/{repository}.png": {"get": {"tags": ["badges"], "summary": "Get PNG badge", "description": "Get badge in PNG image format", "operationId": "badge_png_badges__owner___repository__png_get", "parameters": [{"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}, {"description": "The style of the button, more details on https://shields.io/.", "required": false, "schema": {"title": "Style", "type": "string", "description": "The style of the button, more details on https://shields.io/.", "default": "flat"}, "name": "style", "in": "query"}], "responses": {"200": {"description": "An PNG image.", "content": {"image/png": {}}}, "403": {"description": "Forbidden"}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/badges/{owner}/{repository}.svg": {"get": {"tags": ["badges"], "summary": "Get SVG badge", "description": "Get badge in SVG image format", "operationId": "badge_svg_badges__owner___repository__svg_get", "parameters": [{"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}, {"description": "The style of the button, more details on https://shields.io/.", "required": false, "schema": {"title": "Style", "type": "string", "description": "The style of the button, more details on https://shields.io/.", "default": "flat"}, "name": "style", "in": "query"}], "responses": {"200": {"description": "An SVG image.", "content": {"image/png": {}}}, "403": {"description": "Forbidden"}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/badges/{owner}/{repository}": {"get": {"tags": ["badges"], "summary": "Get shields.io badge config", "description": "Get shields.io badge JSON configuration", "operationId": "badge_badges__owner___repository__get", "parameters": [{"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}], "responses": {"200": {"description": "The shields.io badge JSON configuration", "content": {"application/json": {}}}, "403": {"description": "Forbidden"}, "404": {"description": "Not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/repos/{owner}/{repository}/pulls/{number}/simulator": {"post": {"tags": ["simulator"], "summary": "Get a Mergify simulation for a pull request", "description": "Get a simulation of what Mergify will do on a pull request", "operationId": "simulator_pull_repos__owner___repository__pulls__number__simulator_post", "parameters": [{"description": "The pull request number", "required": true, "schema": {"title": "Number", "type": "integer", "description": "The pull request number"}, "name": "number", "in": "path"}, {"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SimulatorPayload"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SimulatorResponse"}}}}, "403": {"description": "Forbidden"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ApplicationAuth": []}]}}, "/repos/{owner}/{repository}/simulator": {"post": {"tags": ["simulator"], "summary": "Get a Mergify simulation for a repository", "description": "Get a simulation of what Mergify will do for this repository", "operationId": "simulator_repo_repos__owner___repository__simulator_post", "parameters": [{"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SimulatorPayload"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SimulatorResponse"}}}}, "403": {"description": "Forbidden"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ApplicationAuth": []}]}}, "/repos/{owner}/{repository}/pulls/{pull}/events": {"get": {"tags": ["eventlogs"], "summary": "Get the events log of a pull request", "description": "Get the events log of the requested pull request", "operationId": "get_pull_request_eventlogs_repos__owner___repository__pulls__pull__events_get", "parameters": [{"description": "Pull request number", "required": true, "schema": {"title": "Pull", "type": "integer", "description": "Pull request number"}, "name": "pull", "in": "path"}, {"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}, {"description": "The opaque cursor of the current page. Must be extracted for RFC 5988 pagination links to get first/previous/next/last pages", "required": false, "schema": {"title": "Cursor", "type": "string", "description": "The opaque cursor of the current page. Must be extracted for RFC 5988 pagination links to get first/previous/next/last pages"}, "name": "cursor", "in": "query"}, {"description": "The number of items per page", "required": false, "schema": {"title": "Per Page", "maximum": 100.0, "minimum": 1.0, "type": "integer", "description": "The number of items per page", "default": 10}, "name": "per_page", "in": "query"}], "responses": {"200": {"description": "Successful Response", "headers": {"Link": {"description": "Pagination links (rfc5988)", "schema": {"type": "string"}, "example": "Link: <https://api.mergify.com/v1/repos/Mergifyio/mergify-engine/events?cursor=def&per_page=20>; rel=\"next\",\n  <https://api.mergify.com/v1/repos/Mergifyio/mergify-engine/events?cursor=xyz&per_page=20>; rel=\"last\",\n  <https://api.mergify.com/v1/repos/Mergifyio/mergify-engine/events?cursor=abc&per_page=20>; rel=\"first\",\n  <https://api.mergify.com/v1/repos/Mergifyio/mergify-engine/events?cursor=abc&per_page=20>; rel=\"prev\""}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EventLogsResponse"}}}}, "403": {"description": "Forbidden"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ApplicationAuth": []}]}}, "/repos/{owner}/{repository}/events": {"get": {"tags": ["eventlogs"], "summary": "Get the events log of a repository", "description": "Get the events log of the requested repository", "operationId": "get_repository_eventlogs_repos__owner___repository__events_get", "parameters": [{"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}, {"description": "The opaque cursor of the current page. Must be extracted for RFC 5988 pagination links to get first/previous/next/last pages", "required": false, "schema": {"title": "Cursor", "type": "string", "description": "The opaque cursor of the current page. Must be extracted for RFC 5988 pagination links to get first/previous/next/last pages"}, "name": "cursor", "in": "query"}, {"description": "The number of items per page", "required": false, "schema": {"title": "Per Page", "maximum": 100.0, "minimum": 1.0, "type": "integer", "description": "The number of items per page", "default": 10}, "name": "per_page", "in": "query"}], "responses": {"200": {"description": "Successful Response", "headers": {"Link": {"description": "Pagination links (rfc5988)", "schema": {"type": "string"}, "example": "Link: <https://api.mergify.com/v1/repos/Mergifyio/mergify-engine/events?cursor=def&per_page=20>; rel=\"next\",\n  <https://api.mergify.com/v1/repos/Mergifyio/mergify-engine/events?cursor=xyz&per_page=20>; rel=\"last\",\n  <https://api.mergify.com/v1/repos/Mergifyio/mergify-engine/events?cursor=abc&per_page=20>; rel=\"first\",\n  <https://api.mergify.com/v1/repos/Mergifyio/mergify-engine/events?cursor=abc&per_page=20>; rel=\"prev\""}}, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EventLogsResponse"}}}}, "403": {"description": "Forbidden"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ApplicationAuth": []}]}}, "/repos/{owner}/{repository}/stats/time_to_merge": {"get": {"tags": ["statistics"], "summary": "Time to merge statistics for every queues and partitions", "description": "Get the average time to merge statistics, in seconds, for all the queues and partitions in the repository", "operationId": "get_time_to_merge_stats_for_all_queues_and_partitions_endpoint_repos__owner___repository__stats_time_to_merge_get", "parameters": [{"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}, {"description": "Retrieve the time to merge at this timestamp (in seconds)", "required": false, "schema": {"title": "At", "type": "integer", "description": "Retrieve the time to merge at this timestamp (in seconds)"}, "name": "at", "in": "query"}, {"description": "The name of the branch on which we want the statistics", "required": false, "schema": {"title": "Branch", "type": "string", "description": "The name of the branch on which we want the statistics"}, "name": "branch", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Get Time To Merge Stats For All Queues And Partitions Endpoint Repos  Owner   Repository  Stats Time To Merge Get", "type": "array", "items": {"$ref": "#/components/schemas/TimeToMergePerPartition"}}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ApplicationAuth": []}]}}, "/repos/{owner}/{repository}/queues/{queue_name}/stats/time_to_merge": {"get": {"tags": ["statistics"], "summary": "Time to merge statistics for queue name", "description": "Get the average time to merge statistics, in seconds, for the specified queue name only if partitions are not used in this repository", "operationId": "get_average_time_to_merge_stats_endpoint_repos__owner___repository__queues__queue_name__stats_time_to_merge_get", "parameters": [{"description": "Name of the queue", "required": true, "schema": {"title": "Queue Name", "type": "string", "description": "Name of the queue"}, "name": "queue_name", "in": "path"}, {"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}, {"description": "Retrieve the average time to merge for the queue at this timestamp (in seconds)", "required": false, "schema": {"title": "At", "type": "integer", "description": "Retrieve the average time to merge for the queue at this timestamp (in seconds)"}, "name": "at", "in": "query"}, {"description": "The name of the branch on which we want the statistics", "required": false, "schema": {"title": "Branch", "type": "string", "description": "The name of the branch on which we want the statistics"}, "name": "branch", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TimeToMergeResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ApplicationAuth": []}]}}, "/repos/{owner}/{repository}/partitions/{partition_name}/queues/{queue_name}/stats/time_to_merge": {"get": {"tags": ["statistics"], "summary": "Time to merge statistics for queue name of partition", "description": "Get the average time to merge statistics, in seconds, for the specified queue name of the specified partition", "operationId": "get_average_time_to_merge_stats_partition_endpoint_repos__owner___repository__partitions__partition_name__queues__queue_name__stats_time_to_merge_get", "parameters": [{"description": "The partition name", "required": true, "schema": {"title": "Partition Name", "type": "string", "description": "The partition name"}, "name": "partition_name", "in": "path"}, {"description": "Name of the queue", "required": true, "schema": {"title": "Queue Name", "type": "string", "description": "Name of the queue"}, "name": "queue_name", "in": "path"}, {"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}, {"description": "Retrieve the average time to merge for the queue at this timestamp (in seconds)", "required": false, "schema": {"title": "At", "type": "integer", "description": "Retrieve the average time to merge for the queue at this timestamp (in seconds)"}, "name": "at", "in": "query"}, {"description": "The name of the branch on which we want the statistics", "required": false, "schema": {"title": "Branch", "type": "string", "description": "The name of the branch on which we want the statistics"}, "name": "branch", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TimeToMergeResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ApplicationAuth": []}]}}, "/repos/{owner}/{repository}/stats/queue_checks_outcome": {"get": {"tags": ["statistics"], "summary": "Queue checks outcome statistics for every queues and partitions", "description": "Get the queue checks outcome statistics for all the queues and partitions in the repository", "operationId": "get_queue_checks_outcome_stats_for_all_queues_and_partitions_endpoint_repos__owner___repository__stats_queue_checks_outcome_get", "parameters": [{"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}, {"description": "Retrieve the stats that happened after this timestamp (in seconds)", "required": false, "schema": {"title": "Start At", "type": "integer", "description": "Retrieve the stats that happened after this timestamp (in seconds)"}, "name": "start_at", "in": "query"}, {"description": "Retrieve the stats that happened before this timestamp (in seconds)", "required": false, "schema": {"title": "End At", "type": "integer", "description": "Retrieve the stats that happened before this timestamp (in seconds)"}, "name": "end_at", "in": "query"}, {"description": "The name of the branch on which we want the statistics", "required": false, "schema": {"title": "Branch", "type": "string", "description": "The name of the branch on which we want the statistics"}, "name": "branch", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Get Queue Checks Outcome Stats For All Queues And Partitions Endpoint Repos  Owner   Repository  Stats Queue Checks Outcome Get", "type": "array", "items": {"$ref": "#/components/schemas/QueueChecksOutcomePerPartition"}}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ApplicationAuth": []}]}}, "/repos/{owner}/{repository}/queues/{queue_name}/stats/queue_checks_outcome": {"get": {"tags": ["statistics"], "summary": "Queue checks outcome statistics for queue name", "description": "Get the queue checks outcome statistics for the specified queue name, only if partitions are not used in this repository", "operationId": "get_queue_checks_outcome_stats_all_partitions_endpoint_repos__owner___repository__queues__queue_name__stats_queue_checks_outcome_get", "parameters": [{"description": "Name of the queue", "required": true, "schema": {"title": "Queue Name", "type": "string", "description": "Name of the queue"}, "name": "queue_name", "in": "path"}, {"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}, {"description": "Retrieve the stats that happened after this timestamp (in seconds)", "required": false, "schema": {"title": "Start At", "type": "integer", "description": "Retrieve the stats that happened after this timestamp (in seconds)"}, "name": "start_at", "in": "query"}, {"description": "Retrieve the stats that happened before this timestamp (in seconds)", "required": false, "schema": {"title": "End At", "type": "integer", "description": "Retrieve the stats that happened before this timestamp (in seconds)"}, "name": "end_at", "in": "query"}, {"description": "The name of the branch on which we want the statistics", "required": false, "schema": {"title": "Branch", "type": "string", "description": "The name of the branch on which we want the statistics"}, "name": "branch", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueueChecksOutcome"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ApplicationAuth": []}]}}, "/repos/{owner}/{repository}/partitions/{partition_name}/queues/{queue_name}/stats/queue_checks_outcome": {"get": {"tags": ["statistics"], "summary": "Queue checks outcome statistics for queue name of partition", "description": "Get the queue checks outcome statistics for the specified queue name of the specified partition", "operationId": "get_queue_checks_outcome_stats_partition_endpoint_repos__owner___repository__partitions__partition_name__queues__queue_name__stats_queue_checks_outcome_get", "parameters": [{"description": "The partition name", "required": true, "schema": {"title": "Partition Name", "type": "string", "description": "The partition name"}, "name": "partition_name", "in": "path"}, {"description": "Name of the queue", "required": true, "schema": {"title": "Queue Name", "type": "string", "description": "Name of the queue"}, "name": "queue_name", "in": "path"}, {"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}, {"description": "Retrieve the stats that happened after this timestamp (in seconds)", "required": false, "schema": {"title": "Start At", "type": "integer", "description": "Retrieve the stats that happened after this timestamp (in seconds)"}, "name": "start_at", "in": "query"}, {"description": "Retrieve the stats that happened before this timestamp (in seconds)", "required": false, "schema": {"title": "End At", "type": "integer", "description": "Retrieve the stats that happened before this timestamp (in seconds)"}, "name": "end_at", "in": "query"}, {"description": "The name of the branch on which we want the statistics", "required": false, "schema": {"title": "Branch", "type": "string", "description": "The name of the branch on which we want the statistics"}, "name": "branch", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueueChecksOutcome"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ApplicationAuth": []}]}}, "/repos/{owner}/{repository}/queues/{queue_name}/stats/checks_duration": {"get": {"tags": ["statistics"], "summary": "Average checks duration statistics for queue name", "description": "Get the average checks duration statistics, in seconds, for the specified queue name only if partitions are not used in this repository", "operationId": "get_checks_duration_stats_endpoint_repos__owner___repository__queues__queue_name__stats_checks_duration_get", "parameters": [{"description": "Name of the queue", "required": true, "schema": {"title": "Queue Name", "type": "string", "description": "Name of the queue"}, "name": "queue_name", "in": "path"}, {"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}, {"description": "Retrieve the stats that happened after this timestamp (in seconds)", "required": false, "schema": {"title": "Start At", "type": "integer", "description": "Retrieve the stats that happened after this timestamp (in seconds)"}, "name": "start_at", "in": "query"}, {"description": "Retrieve the stats that happened before this timestamp (in seconds)", "required": false, "schema": {"title": "End At", "type": "integer", "description": "Retrieve the stats that happened before this timestamp (in seconds)"}, "name": "end_at", "in": "query"}, {"description": "The name of the branch on which we want the statistics", "required": false, "schema": {"title": "Branch", "type": "string", "description": "The name of the branch on which we want the statistics"}, "name": "branch", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ChecksDurationResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ApplicationAuth": []}]}}, "/repos/{owner}/{repository}/partitions/{partition_name}/queues/{queue_name}/stats/checks_duration": {"get": {"tags": ["statistics"], "summary": "Average checks duration statistics for queue name of partition", "description": "Get the average checks duration statistics, in seconds, for the specified queue name of the specified partition", "operationId": "get_checks_duration_stats_partition_endpoint_repos__owner___repository__partitions__partition_name__queues__queue_name__stats_checks_duration_get", "parameters": [{"description": "The partition name", "required": true, "schema": {"title": "Partition Name", "type": "string", "description": "The partition name"}, "name": "partition_name", "in": "path"}, {"description": "Name of the queue", "required": true, "schema": {"title": "Queue Name", "type": "string", "description": "Name of the queue"}, "name": "queue_name", "in": "path"}, {"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}, {"description": "Retrieve the stats that happened after this timestamp (in seconds)", "required": false, "schema": {"title": "Start At", "type": "integer", "description": "Retrieve the stats that happened after this timestamp (in seconds)"}, "name": "start_at", "in": "query"}, {"description": "Retrieve the stats that happened before this timestamp (in seconds)", "required": false, "schema": {"title": "End At", "type": "integer", "description": "Retrieve the stats that happened before this timestamp (in seconds)"}, "name": "end_at", "in": "query"}, {"description": "The name of the branch on which we want the statistics", "required": false, "schema": {"title": "Branch", "type": "string", "description": "The name of the branch on which we want the statistics"}, "name": "branch", "in": "query"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ChecksDurationResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ApplicationAuth": []}]}}, "/repos/{owner}/{repository}/partitions": {"get": {"tags": ["queues"], "summary": "Get all the partitions", "description": "Get the list of pull requests queued in each merge queue, organized by partition name", "operationId": "repository_partitions_repos__owner___repository__partitions_get", "parameters": [{"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Repository Partitions Repos  Owner   Repository  Partitions Get", "type": "array", "items": {"$ref": "#/components/schemas/BranchPartitions"}}}}}, "403": {"description": "Forbidden"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ApplicationAuth": []}]}}, "/repos/{owner}/{repository}/partitions/branch/{branch_name}": {"get": {"tags": ["queues"], "summary": "Get all the partitions of a specific branch", "description": "Get the list of pull requests queued in each merge queue, organized by partition name", "operationId": "repository_partitions_branch_repos__owner___repository__partitions_branch__branch_name__get", "parameters": [{"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}, {"description": "The name of the branch", "required": true, "schema": {"title": "Branch Name", "type": "string", "description": "The name of the branch"}, "name": "branch_name", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/BranchPartitions"}}}}, "403": {"description": "Forbidden"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ApplicationAuth": []}]}}, "/repos/{owner}/{repository}/partition/{partition_name}/branch/{branch_name}": {"get": {"tags": ["queues"], "summary": "Get a partition's merge queues", "description": "Get the list of pull requests queued in each merge queue of a partition", "operationId": "repository_partition_branch_repos__owner___repository__partition__partition_name__branch__branch_name__get", "parameters": [{"description": "The owner of the repository", "required": true, "schema": {"title": "Owner", "type": "string", "description": "The owner of the repository"}, "name": "owner", "in": "path"}, {"description": "The name of the repository", "required": true, "schema": {"title": "Repository", "type": "string", "description": "The name of the repository"}, "name": "repository", "in": "path"}, {"description": "The partition name", "required": true, "schema": {"title": "Partition Name", "type": "string", "description": "The partition name"}, "name": "partition_name", "in": "path"}, {"description": "The name of the branch", "required": true, "schema": {"title": "Branch Name", "type": "string", "description": "The name of the branch"}, "name": "branch_name", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Partition"}}}}, "403": {"description": "Forbidden"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"ApplicationAuth": []}]}}}, "components": {"schemas": {"Actor": {"title": "Actor", "required": ["type", "id", "name"], "type": "object", "properties": {"type": {"title": "Type", "enum": ["user", "application"], "type": "string"}, "id": {"title": "Id", "type": "integer"}, "name": {"title": "Name", "type": "string"}}}, "ApplicationAccountScope": {"title": "ApplicationAccountScope", "required": ["id", "login"], "type": "object", "properties": {"id": {"title": "Id", "type": "integer"}, "login": {"title": "Login", "type": "string"}}}, "ApplicationResponse": {"title": "ApplicationResponse", "required": ["id", "name", "account_scope"], "type": "object", "properties": {"id": {"title": "Id", "type": "integer"}, "name": {"title": "Name", "type": "string"}, "account_scope": {"$ref": "#/components/schemas/ApplicationAccountScope"}}}, "Branch": {"title": "Branch", "required": ["name"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "description": "The name of the branch"}}}, "BranchPartitions": {"title": "BranchPartitions", "required": ["branch_name"], "type": "object", "properties": {"branch_name": {"title": "Branch Name", "type": "string"}, "partitions": {"title": "Partitions", "type": "object", "additionalProperties": {"type": "array", "items": {"$ref": "#/components/schemas/mergify_engine__web__api__partitions__index__PullRequestQueued"}}, "description": "A dictionary containing partition names as keys and, as a value of those key, the list of pull requests queued in the partition. If partition are not used in this repository, the default partition name used will be `__default__`."}}}, "BriefMergeabilityCheck": {"title": "BriefMergeabilityCheck", "required": ["check_type", "pull_request_number", "started_at", "ended_at", "state"], "type": "object", "properties": {"check_type": {"title": "Check Type", "enum": ["in_place", "draft_pr"], "type": "string", "description": "The type of queue check (in_place or draft_pr)"}, "pull_request_number": {"title": "Pull Request Number", "type": "integer", "description": "The number of the pull request used by the speculative check"}, "started_at": {"title": "Started At", "type": "string", "description": "The timestamp when the checks have started for this pull request", "format": "date-time"}, "ended_at": {"title": "Ended At", "type": "string", "description": "The timestamp when the checks have ended for this pull request", "format": "date-time"}, "state": {"title": "State", "enum": ["success", "failure", "error", "cancelled", "skipped", "action_required", "timed_out", "pending", "neutral", "stale"], "type": "string", "description": "The global state of the checks"}}}, "ChecksDurationResponse": {"title": "ChecksDurationResponse", "required": ["mean", "median"], "type": "object", "properties": {"mean": {"title": "Mean", "type": "number"}, "median": {"title": "Median", "type": "number"}}}, "EventAssign": {"title": "EventAssign", "required": ["timestamp", "trigger", "repository", "pull_request", "event", "metadata"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "event": {"title": "Event", "enum": ["action.assign"], "type": "string"}, "metadata": {"$ref": "#/components/schemas/EventAssignMetadata"}}}, "EventAssignMetadata": {"title": "EventAssignMetadata", "type": "object", "properties": {"added": {"title": "Added", "type": "array", "items": {"type": "string"}}, "removed": {"title": "Removed", "type": "array", "items": {"type": "string"}}}}, "EventBackport": {"title": "EventBackport", "required": ["timestamp", "trigger", "repository", "pull_request", "event", "metadata"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "event": {"title": "Event", "enum": ["action.backport"], "type": "string"}, "metadata": {"$ref": "#/components/schemas/EventCopyMetadata"}}}, "EventClose": {"title": "EventClose", "required": ["timestamp", "trigger", "repository", "pull_request", "event", "metadata"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "event": {"title": "Event", "enum": ["action.close"], "type": "string"}, "metadata": {"$ref": "#/components/schemas/EventCloseMetadata"}}}, "EventCloseMetadata": {"title": "EventCloseMetadata", "type": "object", "properties": {"message": {"title": "Message", "type": "string"}}}, "EventComment": {"title": "EventComment", "required": ["timestamp", "trigger", "repository", "pull_request", "event", "metadata"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "event": {"title": "Event", "enum": ["action.comment"], "type": "string"}, "metadata": {"$ref": "#/components/schemas/EventCommentMetadata"}}}, "EventCommentMetadata": {"title": "EventCommentMetadata", "type": "object", "properties": {"message": {"title": "Message", "type": "string"}}}, "EventCopy": {"title": "EventCopy", "required": ["timestamp", "trigger", "repository", "pull_request", "event", "metadata"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "event": {"title": "Event", "enum": ["action.copy"], "type": "string"}, "metadata": {"$ref": "#/components/schemas/EventCopyMetadata"}}}, "EventCopyMetadata": {"title": "EventCopyMetadata", "type": "object", "properties": {"to": {"title": "To", "type": "string"}, "pull_request_number": {"title": "Pull Request Number", "type": "integer"}, "conflicts": {"title": "Conflicts", "type": "boolean"}}}, "EventDeleteHeadBranch": {"title": "EventDeleteHeadBranch", "required": ["timestamp", "trigger", "repository", "pull_request", "event", "metadata"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "event": {"title": "Event", "enum": ["action.delete_head_branch"], "type": "string"}, "metadata": {"$ref": "#/components/schemas/EventDeleteHeadBranchMetadata"}}}, "EventDeleteHeadBranchMetadata": {"title": "EventDeleteHeadBranchMetadata", "type": "object", "properties": {"branch": {"title": "Branch", "type": "string"}}}, "EventDismissReviews": {"title": "EventDismissReviews", "required": ["timestamp", "trigger", "repository", "pull_request", "event", "metadata"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "event": {"title": "Event", "enum": ["action.dismiss_reviews"], "type": "string"}, "metadata": {"$ref": "#/components/schemas/EventDismissReviewsMetadata"}}}, "EventDismissReviewsMetadata": {"title": "EventDismissReviewsMetadata", "type": "object", "properties": {"users": {"title": "Users", "type": "array", "items": {"type": "string"}}}}, "EventEdit": {"title": "EventEdit", "required": ["timestamp", "trigger", "repository", "pull_request", "event", "metadata"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "event": {"title": "Event", "enum": ["action.edit"], "type": "string"}, "metadata": {"$ref": "#/components/schemas/EventEditMetadata"}}}, "EventEditMetadata": {"title": "EventEditMetadata", "type": "object", "properties": {"draft": {"title": "Draft", "type": "boolean"}}}, "EventLabel": {"title": "EventLabel", "required": ["timestamp", "trigger", "repository", "pull_request", "event", "metadata"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "event": {"title": "Event", "enum": ["action.label"], "type": "string"}, "metadata": {"$ref": "#/components/schemas/EventLabelMetadata"}}}, "EventLabelMetadata": {"title": "EventLabelMetadata", "type": "object", "properties": {"added": {"title": "Added", "type": "array", "items": {"type": "string"}}, "removed": {"title": "Removed", "type": "array", "items": {"type": "string"}}}}, "EventLogsResponse": {"title": "EventLogsResponse", "required": ["size", "per_page", "total", "events"], "type": "object", "properties": {"size": {"title": "Size", "type": "integer", "description": "The number of items in this page"}, "per_page": {"title": "Per Page", "type": "integer", "description": "The number of items per page"}, "total": {"title": "Total", "type": "integer", "description": "The total number of items"}, "events": {"title": "Events", "type": "array", "items": {"oneOf": [{"$ref": "#/components/schemas/EventAssign"}, {"$ref": "#/components/schemas/EventBackport"}, {"$ref": "#/components/schemas/EventClose"}, {"$ref": "#/components/schemas/EventComment"}, {"$ref": "#/components/schemas/EventCopy"}, {"$ref": "#/components/schemas/EventDeleteHeadBranch"}, {"$ref": "#/components/schemas/EventDismissReviews"}, {"$ref": "#/components/schemas/EventEdit"}, {"$ref": "#/components/schemas/EventLabel"}, {"$ref": "#/components/schemas/EventMerge"}, {"$ref": "#/components/schemas/EventPostCheck"}, {"$ref": "#/components/schemas/EventQueueEnter"}, {"$ref": "#/components/schemas/EventQueueLeave"}, {"$ref": "#/components/schemas/EventQueueChecksStart"}, {"$ref": "#/components/schemas/EventQueueChecksEnd"}, {"$ref": "#/components/schemas/EventQueueMerged"}, {"$ref": "#/components/schemas/EventRebase"}, {"$ref": "#/components/schemas/EventRefresh"}, {"$ref": "#/components/schemas/EventRequestReviewers"}, {"$ref": "#/components/schemas/EventRequeue"}, {"$ref": "#/components/schemas/EventReview"}, {"$ref": "#/components/schemas/EventSquash"}, {"$ref": "#/components/schemas/EventUnqueue"}, {"$ref": "#/components/schemas/EventUpdate"}, {"$ref": "#/components/schemas/EventQueueFreezeCreate"}, {"$ref": "#/components/schemas/EventQueueFreezeUpdate"}, {"$ref": "#/components/schemas/EventQueueFreezeDelete"}], "discriminator": {"propertyName": "event", "mapping": {"action.assign": "#/components/schemas/EventAssign", "action.backport": "#/components/schemas/EventBackport", "action.close": "#/components/schemas/EventClose", "action.comment": "#/components/schemas/EventComment", "action.copy": "#/components/schemas/EventCopy", "action.delete_head_branch": "#/components/schemas/EventDeleteHeadBranch", "action.dismiss_reviews": "#/components/schemas/EventDismissReviews", "action.edit": "#/components/schemas/EventEdit", "action.label": "#/components/schemas/EventLabel", "action.merge": "#/components/schemas/EventMerge", "action.post_check": "#/components/schemas/EventPostCheck", "action.queue.enter": "#/components/schemas/EventQueueEnter", "action.queue.leave": "#/components/schemas/EventQueueLeave", "action.queue.checks_start": "#/components/schemas/EventQueueChecksStart", "action.queue.checks_end": "#/components/schemas/EventQueueChecksEnd", "action.queue.merged": "#/components/schemas/EventQueueMerged", "action.rebase": "#/components/schemas/EventRebase", "action.refresh": "#/components/schemas/EventRefresh", "action.request_reviewers": "#/components/schemas/EventRequestReviewers", "action.requeue": "#/components/schemas/EventRequeue", "action.review": "#/components/schemas/EventReview", "action.squash": "#/components/schemas/EventSquash", "action.unqueue": "#/components/schemas/EventUnqueue", "action.update": "#/components/schemas/EventUpdate", "queue.freeze.create": "#/components/schemas/EventQueueFreezeCreate", "queue.freeze.update": "#/components/schemas/EventQueueFreezeUpdate", "queue.freeze.delete": "#/components/schemas/EventQueueFreezeDelete"}}}, "description": "The list of events of a pull request"}}}, "EventMerge": {"title": "EventMerge", "required": ["timestamp", "trigger", "repository", "pull_request", "event", "metadata"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "event": {"title": "Event", "enum": ["action.merge"], "type": "string"}, "metadata": {"$ref": "#/components/schemas/EventMergeMetadata"}}}, "EventMergeMetadata": {"title": "EventMergeMetadata", "type": "object", "properties": {"branch": {"title": "Branch", "type": "string"}}}, "EventNoMetadata": {"title": "EventNoMetadata", "type": "object", "properties": {}}, "EventPostCheck": {"title": "EventPostCheck", "required": ["timestamp", "trigger", "repository", "pull_request", "event", "metadata"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "event": {"title": "Event", "enum": ["action.post_check"], "type": "string"}, "metadata": {"$ref": "#/components/schemas/EventPostCheckMetadata"}}}, "EventPostCheckMetadata": {"title": "EventPostCheckMetadata", "type": "object", "properties": {"conclusion": {"title": "Conclusion", "type": "string"}, "title": {"title": "Title", "type": "string"}, "summary": {"title": "Summary", "type": "string"}}}, "EventQueueChecksEnd": {"title": "EventQueueChecksEnd", "required": ["timestamp", "trigger", "repository", "pull_request", "event", "metadata"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "event": {"title": "Event", "enum": ["action.queue.checks_end"], "type": "string"}, "metadata": {"$ref": "#/components/schemas/EventQueueChecksEndMetadata"}}}, "EventQueueChecksEndMetadata": {"title": "EventQueueChecksEndMetadata", "type": "object", "properties": {"aborted": {"title": "Aborted", "type": "boolean"}, "abort_code": {"title": "Abort Code", "enum": ["PR_DEQUEUED", "PR_AHEAD_DEQUEUED", "PR_AHEAD_FAILED_TO_MERGE", "PR_WITH_HIGHER_PRIORITY_QUEUED", "PR_QUEUED_TWICE", "SPECULATIVE_CHECK_NUMBER_REDUCED", "CHECKS_TIMEOUT", "CHECKS_FAILED", "QUEUE_RULE_MISSING", "UNEXPECTED_QUEUE_CHANGE", "PR_FROZEN_NO_CASCADING", "TARGET_BRANCH_MISSING", "TARGET_BRANCH_CHANGED", "PR_UNEXPECTEDLY_FAILED_TO_MERGE", "BATCH_MAX_FAILURE_RESOLUTION_ATTEMPTS"], "type": "string"}, "abort_reason": {"title": "Abort Reason", "type": "string"}, "abort_status": {"title": "Abort Status", "enum": ["DEFINITIVE", "REEMBARKED"], "type": "string"}, "branch": {"title": "Branch", "type": "string"}, "partition_name": {"title": "Partition Name", "type": "string"}, "position": {"title": "Position", "type": "integer"}, "queue_name": {"title": "Queue Name", "type": "string"}, "queued_at": {"title": "Queued At", "type": "string", "format": "date-time"}, "speculative_check_pull_request": {"$ref": "#/components/schemas/mergify_engine__signals__SpeculativeCheckPullRequest"}, "unqueue_code": {"title": "Unqueue Code", "anyOf": [{"enum": ["PR_MERGED"], "type": "string"}, {"enum": ["PR_DEQUEUED", "PR_AHEAD_DEQUEUED", "PR_AHEAD_FAILED_TO_MERGE", "PR_WITH_HIGHER_PRIORITY_QUEUED", "PR_QUEUED_TWICE", "SPECULATIVE_CHECK_NUMBER_REDUCED", "CHECKS_TIMEOUT", "CHECKS_FAILED", "QUEUE_RULE_MISSING", "UNEXPECTED_QUEUE_CHANGE", "PR_FROZEN_NO_CASCADING", "TARGET_BRANCH_MISSING", "TARGET_BRANCH_CHANGED", "PR_UNEXPECTEDLY_FAILED_TO_MERGE", "BATCH_MAX_FAILURE_RESOLUTION_ATTEMPTS"], "type": "string"}]}}}, "EventQueueChecksStart": {"title": "EventQueueChecksStart", "required": ["timestamp", "trigger", "repository", "pull_request", "event", "metadata"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "event": {"title": "Event", "enum": ["action.queue.checks_start"], "type": "string"}, "metadata": {"$ref": "#/components/schemas/EventQueueChecksStartMetadata"}}}, "EventQueueChecksStartMetadata": {"title": "EventQueueChecksStartMetadata", "type": "object", "properties": {"branch": {"title": "Branch", "type": "string"}, "partition_name": {"title": "Partition Name", "type": "string"}, "position": {"title": "Position", "type": "integer"}, "queue_name": {"title": "Queue Name", "type": "string"}, "queued_at": {"title": "Queued At", "type": "string", "format": "date-time"}, "speculative_check_pull_request": {"$ref": "#/components/schemas/mergify_engine__signals__SpeculativeCheckPullRequest"}}}, "EventQueueEnter": {"title": "EventQueueEnter", "required": ["timestamp", "trigger", "repository", "pull_request", "event", "metadata"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "event": {"title": "Event", "enum": ["action.queue.enter"], "type": "string"}, "metadata": {"$ref": "#/components/schemas/EventQueueEnterMetadata"}}}, "EventQueueEnterMetadata": {"title": "EventQueueEnterMetadata", "type": "object", "properties": {"queue_name": {"title": "Queue Name", "type": "string"}, "branch": {"title": "Branch", "type": "string"}, "position": {"title": "Position", "type": "integer"}, "queued_at": {"title": "Queued At", "type": "string", "format": "date-time"}, "partition_name": {"title": "Partition Name", "type": "string"}}}, "EventQueueFreezeCreate": {"title": "EventQueueFreezeCreate", "required": ["timestamp", "trigger", "repository", "pull_request", "event", "metadata"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "event": {"title": "Event", "enum": ["queue.freeze.create"], "type": "string"}, "metadata": {"$ref": "#/components/schemas/EventQueueFreezeCreateMetadata"}}}, "EventQueueFreezeCreateMetadata": {"title": "EventQueueFreezeCreateMetadata", "type": "object", "properties": {"queue_name": {"title": "Queue Name", "type": "string"}, "reason": {"title": "Reason", "type": "string"}, "cascading": {"title": "Cascading", "type": "boolean"}, "created_by": {"$ref": "#/components/schemas/Actor"}}}, "EventQueueFreezeDelete": {"title": "EventQueueFreezeDelete", "required": ["timestamp", "trigger", "repository", "pull_request", "event", "metadata"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "event": {"title": "Event", "enum": ["queue.freeze.delete"], "type": "string"}, "metadata": {"$ref": "#/components/schemas/EventQueueFreezeDeleteMetadata"}}}, "EventQueueFreezeDeleteMetadata": {"title": "EventQueueFreezeDeleteMetadata", "type": "object", "properties": {"queue_name": {"title": "Queue Name", "type": "string"}, "deleted_by": {"$ref": "#/components/schemas/Actor"}}}, "EventQueueFreezeUpdate": {"title": "EventQueueFreezeUpdate", "required": ["timestamp", "trigger", "repository", "pull_request", "event", "metadata"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "event": {"title": "Event", "enum": ["queue.freeze.update"], "type": "string"}, "metadata": {"$ref": "#/components/schemas/EventQueueFreezeUpdateMetadata"}}}, "EventQueueFreezeUpdateMetadata": {"title": "EventQueueFreezeUpdateMetadata", "type": "object", "properties": {"queue_name": {"title": "Queue Name", "type": "string"}, "reason": {"title": "Reason", "type": "string"}, "cascading": {"title": "Cascading", "type": "boolean"}, "updated_by": {"$ref": "#/components/schemas/Actor"}}}, "EventQueueLeave": {"title": "EventQueueLeave", "required": ["timestamp", "trigger", "repository", "pull_request", "event", "metadata"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "event": {"title": "Event", "enum": ["action.queue.leave"], "type": "string"}, "metadata": {"$ref": "#/components/schemas/EventQueueLeaveMetadata"}}}, "EventQueueLeaveMetadata": {"title": "EventQueueLeaveMetadata", "type": "object", "properties": {"reason": {"title": "Reason", "type": "string"}, "merged": {"title": "Merged", "type": "boolean"}, "queue_name": {"title": "Queue Name", "type": "string"}, "branch": {"title": "Branch", "type": "string"}, "position": {"title": "Position", "type": "integer"}, "partition_name": {"title": "Partition Name", "type": "string"}, "queued_at": {"title": "Queued At", "type": "string", "format": "date-time"}, "seconds_waiting_for_schedule": {"title": "Seconds Waiting For Schedule", "type": "integer"}, "seconds_waiting_for_freeze": {"title": "Seconds Waiting For Freeze", "type": "integer"}}}, "EventQueueMerged": {"title": "EventQueueMerged", "required": ["timestamp", "trigger", "repository", "pull_request", "event", "metadata"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "event": {"title": "Event", "enum": ["action.queue.merged"], "type": "string"}, "metadata": {"$ref": "#/components/schemas/EventQueueMergedMetadata"}}}, "EventQueueMergedMetadata": {"title": "EventQueueMergedMetadata", "type": "object", "properties": {"branch": {"title": "Branch", "type": "string"}, "partition_names": {"title": "Partition Names", "type": "array", "items": {"type": "string"}}, "queue_name": {"title": "Queue Name", "type": "string"}, "queued_at": {"title": "Queued At", "type": "string", "format": "date-time"}}}, "EventRebase": {"title": "EventRebase", "required": ["timestamp", "trigger", "repository", "pull_request", "metadata", "event"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "metadata": {"$ref": "#/components/schemas/EventNoMetadata"}, "event": {"title": "Event", "enum": ["action.rebase"], "type": "string"}}}, "EventRefresh": {"title": "EventRefresh", "required": ["timestamp", "trigger", "repository", "pull_request", "metadata", "event"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "metadata": {"$ref": "#/components/schemas/EventNoMetadata"}, "event": {"title": "Event", "enum": ["action.refresh"], "type": "string"}}}, "EventRequestReviewers": {"title": "EventRequestReviewers", "required": ["timestamp", "trigger", "repository", "pull_request", "event", "metadata"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "event": {"title": "Event", "enum": ["action.request_reviewers"], "type": "string"}, "metadata": {"$ref": "#/components/schemas/EventRequestReviewsMetadata"}}}, "EventRequestReviewsMetadata": {"title": "EventRequestReviewsMetadata", "type": "object", "properties": {"reviewers": {"title": "Reviewers", "type": "array", "items": {"type": "string"}}, "team_reviewers": {"title": "Team Reviewers", "type": "array", "items": {"type": "string"}}}}, "EventRequeue": {"title": "EventRequeue", "required": ["timestamp", "trigger", "repository", "pull_request", "metadata", "event"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "metadata": {"$ref": "#/components/schemas/EventNoMetadata"}, "event": {"title": "Event", "enum": ["action.requeue"], "type": "string"}}}, "EventReview": {"title": "EventReview", "required": ["timestamp", "trigger", "repository", "pull_request", "event", "metadata"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "event": {"title": "Event", "enum": ["action.review"], "type": "string"}, "metadata": {"$ref": "#/components/schemas/EventReviewMetadata"}}}, "EventReviewMetadata": {"title": "EventReviewMetadata", "type": "object", "properties": {"type": {"title": "Type", "type": "string"}, "reviewer": {"title": "Reviewer", "type": "string"}, "message": {"title": "Message", "type": "string"}}}, "EventSquash": {"title": "EventSquash", "required": ["timestamp", "trigger", "repository", "pull_request", "metadata", "event"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "metadata": {"$ref": "#/components/schemas/EventNoMetadata"}, "event": {"title": "Event", "enum": ["action.squash"], "type": "string"}}}, "EventUnqueue": {"title": "EventUnqueue", "required": ["timestamp", "trigger", "repository", "pull_request", "metadata", "event"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "metadata": {"$ref": "#/components/schemas/EventNoMetadata"}, "event": {"title": "Event", "enum": ["action.unqueue"], "type": "string"}}}, "EventUpdate": {"title": "EventUpdate", "required": ["timestamp", "trigger", "repository", "pull_request", "metadata", "event"], "type": "object", "properties": {"timestamp": {"title": "Timestamp", "type": "string", "format": "date-time"}, "trigger": {"title": "Trigger", "type": "string"}, "repository": {"title": "Repository", "type": "string"}, "pull_request": {"title": "Pull Request", "type": "integer"}, "metadata": {"$ref": "#/components/schemas/EventNoMetadata"}, "event": {"title": "Event", "enum": ["action.update"], "type": "string"}}}, "HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "Partition": {"title": "Partition", "type": "object", "properties": {"pull_requests": {"title": "Pull Requests", "type": "array", "items": {"$ref": "#/components/schemas/mergify_engine__web__api__partitions__index__PullRequestQueued"}, "description": "The pull requests queued in this partition"}}}, "Queue": {"title": "Queue", "required": ["branch"], "type": "object", "properties": {"branch": {"title": "Branch", "allOf": [{"$ref": "#/components/schemas/Branch"}], "description": "The branch of this queue"}, "pull_requests": {"title": "Pull Requests", "type": "array", "items": {"$ref": "#/components/schemas/mergify_engine__web__api__queues__index__PullRequestQueued"}, "description": "The pull requests in this queue"}}}, "QueueCheck": {"title": "QueueCheck", "required": ["name", "description", "url", "state", "avatar_url"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "description": "Check name"}, "description": {"title": "Description", "type": "string", "description": "Check description"}, "url": {"title": "Url", "type": "string", "description": "Check detail url"}, "state": {"title": "State", "enum": ["success", "failure", "error", "cancelled", "skipped", "action_required", "timed_out", "pending", "neutral", "stale"], "type": "string", "description": "Check state"}, "avatar_url": {"title": "Avatar Url", "type": "string", "description": "Check avatar_url"}}}, "QueueChecksOutcome": {"title": "QueueChecksOutcome", "required": ["PR_AHEAD_DEQUEUED", "PR_AHEAD_FAILED_TO_MERGE", "PR_WITH_HIGHER_PRIORITY_QUEUED", "PR_QUEUED_TWICE", "SPECULATIVE_CHECK_NUMBER_REDUCED", "CHECKS_TIMEOUT", "CHECKS_FAILED", "QUEUE_RULE_MISSING", "UNEXPECTED_QUEUE_CHANGE", "PR_FROZEN_NO_CASCADING", "SUCCESS", "PR_DEQUEUED", "TARGET_BRANCH_CHANGED", "TARGET_BRANCH_MISSING", "PR_UNEXPECTEDLY_FAILED_TO_MERGE", "BATCH_MAX_FAILURE_RESOLUTION_ATTEMPTS"], "type": "object", "properties": {"PR_AHEAD_DEQUEUED": {"title": "Pr Ahead Dequeued", "type": "integer", "description": "A pull request ahead in the queue has been dequeued."}, "PR_AHEAD_FAILED_TO_MERGE": {"title": "Pr Ahead Failed To Merge", "type": "integer", "description": "A pull request ahead in the queue failed to get merged."}, "PR_WITH_HIGHER_PRIORITY_QUEUED": {"title": "Pr With Higher Priority Queued", "type": "integer", "description": "A pull request with a higher priority has been queued."}, "PR_QUEUED_TWICE": {"title": "Pr Queued Twice", "type": "integer", "description": "A pull request was queued twice."}, "SPECULATIVE_CHECK_NUMBER_REDUCED": {"title": "Speculative Check Number Reduced", "type": "integer", "description": "The number of speculative checks, in the queue rules, has been reduced."}, "CHECKS_TIMEOUT": {"title": "Checks Timeout", "type": "integer", "description": "The checks for the queued pull request have timed out."}, "CHECKS_FAILED": {"title": "Checks Failed", "type": "integer", "description": "The checks for the queued pull request have failed."}, "QUEUE_RULE_MISSING": {"title": "Queue Rule Missing", "type": "integer", "description": "The queue rules are missing because of a configuration change."}, "UNEXPECTED_QUEUE_CHANGE": {"title": "Unexpected Queue Change", "type": "integer", "description": "An unexpected change happened."}, "PR_FROZEN_NO_CASCADING": {"title": "Pr Frozen No Cascading", "type": "integer", "description": "A pull request has been freezed because of a queue freeze with cascading effect disabled."}, "SUCCESS": {"title": "Success", "type": "integer", "description": "Successfully merged the pull request."}, "PR_DEQUEUED": {"title": "Pr Dequeued", "type": "integer", "description": "Pull request has been dequeued"}, "TARGET_BRANCH_CHANGED": {"title": "Target Branch Changed", "type": "integer", "description": "The pull request target branch has changed"}, "TARGET_BRANCH_MISSING": {"title": "Target Branch Missing", "type": "integer", "description": "The target branch does not exist anymore"}, "PR_UNEXPECTEDLY_FAILED_TO_MERGE": {"title": "Pr Unexpectedly Failed To Merge", "type": "integer", "description": "Pull request unexpectedly failed to get merged"}, "BATCH_MAX_FAILURE_RESOLUTION_ATTEMPTS": {"title": "Batch Max Failure Resolution Attempts", "type": "integer", "description": "The maximum batch failure resolution attempts has been reached"}}}, "QueueChecksOutcomePerPartition": {"title": "QueueChecksOutcomePerPartition", "required": ["partition_name", "queues"], "type": "object", "properties": {"partition_name": {"title": "Partition Name", "type": "string", "description": "The name of the partition, if no partition are used the partition name will be `__default__`"}, "queues": {"title": "Queues", "type": "array", "items": {"$ref": "#/components/schemas/QueueChecksOutcomePerQueue"}, "description": "The checks outcomes data for each queue in the current partition"}}}, "QueueChecksOutcomePerQueue": {"title": "QueueChecksOutcomePerQueue", "required": ["queue_name", "queue_checks_outcome"], "type": "object", "properties": {"queue_name": {"title": "Queue Name", "type": "string", "description": "The name of the queue"}, "queue_checks_outcome": {"title": "Queue Checks Outcome", "allOf": [{"$ref": "#/components/schemas/QueueChecksOutcome"}], "description": "The checks outcomes data for the partition's queue"}}}, "QueueConfig": {"title": "QueueConfig", "required": ["priority", "speculative_checks", "batch_size", "batch_max_wait_time", "allow_inplace_checks", "disallow_checks_interruption_from_queues", "checks_timeout", "draft_bot_account", "queue_branch_prefix", "queue_branch_merge_method", "allow_queue_branch_edit", "batch_max_failure_resolution_attempts", "commit_message_template", "merge_method", "merge_bot_account", "update_method", "update_bot_account", "autosquash"], "type": "object", "properties": {"priority": {"title": "Priority", "type": "integer"}, "speculative_checks": {"title": "Speculative Checks", "type": "integer"}, "batch_size": {"title": "Batch Size", "type": "integer"}, "batch_max_wait_time": {"title": "Batch Max Wait Time", "type": "number", "format": "time-delta"}, "allow_inplace_checks": {"title": "Allow Inplace Checks", "type": "boolean"}, "disallow_checks_interruption_from_queues": {"title": "Disallow Checks Interruption From Queues", "type": "array", "items": {"type": "string"}}, "checks_timeout": {"title": "Checks Timeout", "type": "number", "format": "time-delta"}, "draft_bot_account": {"title": "Draft Bot Account", "type": "string"}, "queue_branch_prefix": {"title": "Queue Branch Prefix", "type": "string"}, "queue_branch_merge_method": {"title": "Queue Branch Merge Method", "enum": ["fast-forward"], "type": "string"}, "allow_queue_branch_edit": {"title": "Allow Queue Branch Edit", "type": "boolean"}, "batch_max_failure_resolution_attempts": {"title": "Batch Max Failure Resolution Attempts", "type": "integer"}, "commit_message_template": {"title": "Commit Message Template", "type": "string"}, "merge_method": {"title": "Merge Method", "enum": ["merge", "rebase", "squash", "fast-forward"], "type": "string"}, "merge_bot_account": {"title": "Merge Bot Account", "type": "string"}, "update_method": {"title": "Update Method", "enum": ["rebase", "merge"], "type": "string"}, "update_bot_account": {"title": "Update Bot Account", "type": "string"}, "autosquash": {"title": "Autosquash", "type": "boolean"}}}, "QueueFreeze": {"title": "QueueFreeze", "type": "object", "properties": {"name": {"title": "Name", "type": "string", "description": "Queue name"}, "reason": {"title": "Reason", "type": "string", "description": "The reason of the queue freeze"}, "freeze_date": {"title": "Freeze Date", "type": "string", "description": "The date and time of the freeze", "format": "date-time"}, "cascading": {"title": "Cascading", "type": "boolean", "description": "The active status of the cascading effect", "default": true}}}, "QueueFreezePayload": {"title": "QueueFreezePayload", "required": ["reason"], "type": "object", "properties": {"reason": {"title": "Reason", "maxLength": 255, "type": "string", "description": "The reason of the queue freeze"}, "cascading": {"title": "Cascading", "type": "boolean", "description": "The active status of the cascading effect", "default": true}}}, "QueueFreezeResponse": {"title": "QueueFreezeResponse", "type": "object", "properties": {"queue_freezes": {"title": "Queue Freezes", "type": "array", "items": {"$ref": "#/components/schemas/QueueFreeze"}, "description": "The frozen queues of the repository"}}}, "QueueRule": {"title": "QueueRule", "required": ["name", "config"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "description": "The name of the queue rule"}, "config": {"title": "Config", "allOf": [{"$ref": "#/components/schemas/QueueConfig"}], "description": "The configuration of the queue rule"}}}, "Queues": {"title": "Queues", "type": "object", "properties": {"queues": {"title": "Queues", "type": "array", "items": {"$ref": "#/components/schemas/Queue"}, "description": "The queues of the repository"}}}, "QueuesConfig": {"title": "QueuesConfig", "type": "object", "properties": {"configuration": {"title": "Configuration", "type": "array", "items": {"$ref": "#/components/schemas/QueueRule"}, "description": "The queues configuration of the repository"}}}, "SimulatorPayload": {"title": "SimulatorPayload", "required": ["mergify_yml"], "type": "object", "properties": {"mergify_yml": {"title": "Mergify Yml", "type": "string", "description": "A Mergify configuration"}}}, "SimulatorResponse": {"title": "SimulatorResponse", "required": ["title", "summary"], "type": "object", "properties": {"title": {"title": "Title", "type": "string", "description": "The title of the Mergify check run simulation"}, "summary": {"title": "Summary", "type": "string", "description": "The summary of the Mergify check run simulation"}}}, "TimeToMergePerPartition": {"title": "TimeToMergePerPartition", "required": ["partition_name", "queues"], "type": "object", "properties": {"partition_name": {"title": "Partition Name", "type": "string", "description": "The name of the partition, if no partition are used the partition name will be `__default__`"}, "queues": {"title": "Queues", "type": "array", "items": {"$ref": "#/components/schemas/TimeToMergePerQueue"}, "description": "The time to merge data for each queue in the current partition"}}}, "TimeToMergePerQueue": {"title": "TimeToMergePerQueue", "required": ["queue_name", "time_to_merge"], "type": "object", "properties": {"queue_name": {"title": "Queue Name", "type": "string", "description": "The name of the queue"}, "time_to_merge": {"title": "Time To Merge", "allOf": [{"$ref": "#/components/schemas/TimeToMergeResponse"}], "description": "The time to merge data for the partition's queue"}}}, "TimeToMergeResponse": {"title": "TimeToMergeResponse", "required": ["mean", "median"], "type": "object", "properties": {"mean": {"title": "Mean", "type": "number"}, "median": {"title": "Median", "type": "number"}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}, "mergify_engine__signals__SpeculativeCheckPullRequest": {"title": "SpeculativeCheckPullRequest", "type": "object", "properties": {"number": {"title": "Number", "type": "integer"}, "in_place": {"title": "In Place", "type": "boolean"}, "checks_timed_out": {"title": "Checks Timed Out", "type": "boolean"}, "checks_conclusion": {"title": "Checks Conclusion", "enum": ["success", "failure", "error", "cancelled", "skipped", "action_required", "timed_out", "neutral", "stale", "pending"], "type": "string"}, "checks_started_at": {"title": "Checks Started At", "type": "string", "format": "date-time"}, "checks_ended_at": {"title": "Checks Ended At", "type": "string", "format": "date-time"}}}, "mergify_engine__web__api__partitions__index__PullRequestQueued": {"title": "PullRequestQueued", "required": ["number", "position", "priority", "effective_priority", "queue_rule", "queued_at"], "type": "object", "properties": {"number": {"title": "Number", "type": "integer", "description": "The number of the pull request"}, "position": {"title": "Position", "type": "integer", "description": "The position of the pull request in the queue. The first pull request in the queue is at position 0"}, "priority": {"title": "Priority", "type": "integer", "description": "The priority of this pull request"}, "effective_priority": {"title": "Effective Priority", "type": "integer", "description": "The effective priority of this pull request"}, "queue_rule": {"title": "Queue Rule", "allOf": [{"$ref": "#/components/schemas/QueueRule"}], "description": "The queue rule associated to this pull request"}, "queued_at": {"title": "Queued At", "type": "string", "description": "The timestamp when the pull requested has entered in the queue", "format": "date-time"}, "mergeability_check": {"title": "Mergeability Check", "allOf": [{"$ref": "#/components/schemas/BriefMergeabilityCheck"}], "description": "Information about the mergeability check currently processed"}}}, "mergify_engine__web__api__queues__index__PullRequestQueued": {"title": "PullRequestQueued", "required": ["number", "position", "priority", "effective_priority", "queue_rule", "queued_at", "speculative_check_pull_request", "partition_name"], "type": "object", "properties": {"number": {"title": "Number", "type": "integer", "description": "The number of the pull request"}, "position": {"title": "Position", "type": "integer", "description": "The position of the pull request in the queue. The first pull request in the queue is at position 0"}, "priority": {"title": "Priority", "type": "integer", "description": "The priority of this pull request"}, "effective_priority": {"title": "Effective Priority", "type": "integer", "description": "The effective priority of this pull request"}, "queue_rule": {"title": "Queue Rule", "allOf": [{"$ref": "#/components/schemas/QueueRule"}], "description": "The queue rule associated to this pull request"}, "queued_at": {"title": "Queued At", "type": "string", "description": "The timestamp when the pull requested has entered in the queue", "format": "date-time"}, "speculative_check_pull_request": {"title": "Speculative Check Pull Request", "allOf": [{"$ref": "#/components/schemas/mergify_engine__web__api__queues__index__SpeculativeCheckPullRequest"}], "description": "Use `mergeability_check` instead", "deprecated": true}, "mergeability_check": {"title": "Mergeability Check", "allOf": [{"$ref": "#/components/schemas/BriefMergeabilityCheck"}], "description": "Information about the mergeability check currently processed"}, "estimated_time_of_merge": {"title": "Estimated Time Of Merge", "type": "string", "description": "The estimated timestamp when this pull request will be merged", "format": "date-time"}, "partition_name": {"title": "Partition Name", "type": "string", "description": "The name of the partition, if any, in which the pull request is queued"}}}, "mergify_engine__web__api__queues__index__SpeculativeCheckPullRequest": {"title": "SpeculativeCheckPullRequest", "required": ["in_place", "number", "started_at", "ended_at", "checks", "evaluated_conditions", "state"], "type": "object", "properties": {"in_place": {"title": "In Place", "type": "boolean", "description": "Whether the pull request has been checked in-place"}, "number": {"title": "Number", "type": "integer", "description": "The number of the pull request used by the speculative check"}, "started_at": {"title": "Started At", "type": "string", "description": "The timestamp when the checks have started for this pull request", "format": "date-time"}, "ended_at": {"title": "Ended At", "type": "string", "description": "The timestamp when the checks have ended for this pull request", "format": "date-time"}, "checks": {"title": "Checks", "type": "array", "items": {"$ref": "#/components/schemas/QueueCheck"}, "description": "The list of pull request checks"}, "evaluated_conditions": {"title": "Evaluated Conditions", "type": "string", "description": "The queue rule conditions evaluation report"}, "state": {"title": "State", "enum": ["success", "failure", "error", "cancelled", "skipped", "action_required", "timed_out", "pending", "neutral", "stale"], "type": "string", "description": "The global state of the checks"}}}}, "securitySchemes": {"ApplicationAuth": {"type": "http", "scheme": "bearer"}}}, "tags": [{"name": "applications", "description": "Operations with applications."}, {"name": "badges", "description": "Operations with badges."}, {"name": "ci", "description": "CI Optimizer."}, {"name": "eventlogs", "description": "Operations with event logs."}, {"name": "queues", "description": "Operations with queues."}, {"name": "simulator", "description": "Mergify configuration simulator."}, {"name": "statistics", "description": "Operations with statistics."}]}